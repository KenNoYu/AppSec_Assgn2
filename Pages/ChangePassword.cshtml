@page
@model WebApplication1.Pages.ChangePasswordModel
@{
	ViewData["Title"] = "Change Password";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-sm-12 col-md-8 col-lg-6">
            <h1 class="mb-3">Change Password</h1>

            <form method="post" asp-antiforgery="true">
                <div asp-validation-summary="All" class="text-danger"></div>

                <!-- Current Password -->
                <div class="mb-3">
                    <label class="form-label" asp-for="Input.CurrentPassword">Current Password</label>
                    <input type="password" asp-for="Input.CurrentPassword" class="form-control" />
                    <span asp-validation-for="Input.CurrentPassword" class="text-danger"></span>
                </div>

                <!-- New Password -->
                <div class="mb-3">
                    <label class="form-label" asp-for="Input.NewPassword">New Password</label>
                    <input type="password" asp-for="Input.NewPassword" class="form-control" id="NewPassword" />
                    <span asp-validation-for="Input.NewPassword" class="text-danger"></span>
                    <span id="passwordFeedback"></span>
                    <div id="passwordScore" class="mt-1"></div>
                </div>

                <!-- Confirm New Password -->
                <div class="mb-3">
                    <label class="form-label" asp-for="Input.ConfirmNewPassword">Confirm New Password</label>
                    <input type="password" asp-for="Input.ConfirmNewPassword" class="form-control" id="ConfirmNewPassword" />
                    <span asp-validation-for="Input.ConfirmNewPassword" class="text-danger"></span>
                    <span asp-validaton-for="RModel.ConfirmPassword" class="text-danger"></span>
                    <span id="confirmPasswordFeedback" class="text-danger"></span>
                </div>

                <!-- Change Password Button -->
                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">Change Password</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const passwordInput = document.getElementById("NewPassword");
        const confirmPasswordInput = document.getElementById("ConfirmNewPassword");
        const passwordFeedback = document.getElementById("passwordFeedback");
        const confirmPasswordFeedback = document.getElementById("confirmPasswordFeedback");
        const passwordScoreDiv = document.getElementById("passwordScore");
        const form = document.getElementById("registerForm");

        // Function to calculate password score
        function calculatePasswordScore(password) {
            let score = 0;

            if (password.length >= 12) score++; // Very Weak
            if (/[a-z]/.test(password)) score++; // Weak
            if (/[A-Z]/.test(password)) score++; // Medium
            if (/\d/.test(password)) score++; // Strong
            if (/[!@@#$%^&*(),.?":{}|<>]/.test(password)) score++; // Excellent

            return score;
        }

        // Function to display password score and feedback
        function displayPasswordScore(score) {
            const feedback = [
                "Complexity: Very Weak",
                "Complexity: Weak",
                "Complexity: Medium",
                "Complexity: Strong",
                "Complexity: Excellent",
            ];

            let feedbackText = feedback[score - 1] || "Complexity: Very Weak";
            let color = "red";

            if (score === 2) color = "orange";
            if (score === 3) color = "blue";
            if (score === 4) color = "green";
            if (score === 5) color = "darkgreen";

            passwordScoreDiv.textContent = feedbackText;
            passwordScoreDiv.style.color = color;
        }

        passwordInput.addEventListener("input", () => {
            const password = passwordInput.value;
            const score = calculatePasswordScore(password);

            if (score < 5) {
                passwordFeedback.textContent = "Password must meet all complexity requirements.";
                passwordFeedback.style.color = "red";
            } else {
                passwordFeedback.textContent = "";
            }

            displayPasswordScore(score);
        });

        confirmPasswordInput.addEventListener("input", () => {
            const confirmPassword = confirmPasswordInput.value;

            if (confirmPassword !== passwordInput.value) {
                confirmPasswordFeedback.textContent = "Passwords do not match.";
            } else {
                confirmPasswordFeedback.textContent = "";
            }
        });

        // Prevent form submission if passwords are invalid
        form.addEventListener("submit", (e) => {
            const password = passwordInput.value;
            const score = calculatePasswordScore(password);

            if (score < 5) {
                e.preventDefault();
                passwordFeedback.textContent = "Please enter a valid strong password.";
            }

            if (confirmPasswordInput.value !== passwordInput.value) {
                e.preventDefault();
                confirmPasswordFeedback.textContent = "Passwords do not match.";
            }
        });
    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
